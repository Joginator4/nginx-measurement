apiVersion: batch/v1
kind: Job
metadata:
  name: gobench-client-{{ .Release.Name }}
  labels:
    app: gobench-client
  annotations:
    k8s.v1.cni.cncf.io/networks: ovs-green-net, ovs-red-net
spec:
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: ovs-green-net, ovs-red-net
    spec:
      containers:
      - name: {{ .Values.image.name }}
        image: {{ .Values.image.repo }}/{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.ImagePullPolicy}}
        env:
        - name: SERVER_IP
          value: {{ .Values.env.SERVER_IP }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalataion }}
          privileged: {{ .Values.securityContext.privileged }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
        command: [ "/bin/bash", "-c"]
        args:
          - |
            /usr/local/bin/gobench -t 60 -c 100 -u http://{{ .Values.env.SERVER_IP }}/  > /mnt/result.txt
            sshpass -p {{ .Values.sshpass.rsync_password }} scp -q -o StrictHostKeyChecking=no /mnt/result.txt {{ .Values.sshpass.rsync_server }}/{{ .Values.scenario.name }}
            cat /mnt/result.txt
      imagePullSecrets:
            - name: repo-secret-{{ .Release.Name }}
      restartPolicy: {{ .Values.image.restartPolicy }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.env.NODE_SELECTOR }}