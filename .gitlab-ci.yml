stages:
  - build
  - test
  - deploy

variables:
  MASTER_KEY: $MASTER_NODE_PRIVATE_KEY
  MICROSERVICE_DIRECTORY: ""
  MICROSERVICE_NAME: ""
  MICROSERVICE_IMAGE_NAME: $CI_REGISTRY_IMAGE/$MICROSERVICE_NAME
  MICROSERVICE_IMAGE_VERSION: "1.0.0"
  CHART_FOLDER: ""


.build_image:
  stage: build
  tags:
    - bastion
    - shell
  only:
    changes:
      - "*/Dockerfile"
  before_script:
    - ls
  script:
    - echo "Logging to CR"; docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd $MICROSERVICE_DIRECTORY
    - docker build -t $MICROSERVICE_IMAGE_NAME/$MICROSERVICE_IMAGE_VERSION .
    - docker push $MICROSERVICE_IMAGE_NAME/$MICROSERVICE_IMAGE_VERSION

build_nginx:
  extends:
    - .build_image
  variables:
    MICROSERVICE_NAME: nginx
    MICROSERVICE_DIRECTORY: nginx


build_gobench:
  extends:
    - .build_image
  variables:
    MICROSERVICE_NAME: gobench
    MICROSERVICE_DIRECTORY: gobench


.run_nginx_server:
  stage: test
  tags:
    - bastion
    - shell
  before_script:
    - export KUBECONFIG=$KUBERNETES_CONF
    - cat $MASTER_KEY | sed -e "s/-----BEGIN OPENSSH PRIVATE KEY-----/&\n/" -e "s/-----END OPENSSH PRIVATE KEY-----/&\n/" -e "s/\S\{64\}/&\n/g"\ > deploy-key.pem
    - chmod 400 deploy-key.pem
  script:
      - |-
          ssh -tt -o StrictHostKeyChecking=no -i deploy-key.pem vagrant@$MASTER_IP_ADDRESS "
            docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
            cd /home/vagrant/gitlab_nginx/nginx-measurement/$MICROSERVICE_DIRECTORY &&
            helm install nginx-server --set .imageCredentials.registry=$CI_REGISTRY --set .imageCredentials.username=$CI_REGISTRY_USER --set .image.Credentials.password=$CI_REGISTRY_PASSWORD --set .containers.tag=$MICROSERVICE_IMAGE_VERSION  $CHART_FOLDER
            "

.run_gobench_client:
  stage: test
  tags:
    - bastion
    - shell
  before_script:
    - export KUBECONFIG=/home/vagrant/.kube/config
    - cat $MASTER_KEY | sed -e "s/-----BEGIN OPENSSH PRIVATE KEY-----/&\n/" -e "s/-----END OPENSSH PRIVATE KEY-----/&\n/" -e "s/\S\{64\}/&\n/g"\ > deploy-key.pem
    - chmod 400 deploy-key.pem
    - export SERVER_IP=$(kubectl get pods -l app=nginx -o json | jq '.items[] | .status | .podIP' | tr -d '"')
  script:
      - |-
          ssh -tt -o StrictHostKeyChecking=no -i deploy-key.pem vagrant@$MASTER_IP_ADDRESS "
            export SERVER_IP=$(kubectl get pods -l app=nginx -o json | jq '.items[] | .status | .podIP' | tr -d '"') &&
            echo $SERVER_IP &&
            docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
            cd /home/vagrant/gitlab_nginx/nginx-measurement/$MICROSERVICE_DIRECTORY &&
            helm install gobench-client --set .env.SERVER_IP=$SERVER_IP --set .imageCredentials.registry=$CI_REGISTRY --set .imageCredentials.username=$CI_REGISTRY_USER --set .image.Credentials.password=$CI_REGISTRY_PASSWORD --set .containers.image_tag=$MICROSERVICE_IMAGE_VERSION --set .sshpass.rsync_server_ip_address=$BASTION_IP_ADDRESS --set .sshpass.rsync_server_login=$BASTION_LOGIN --set .sshpass.rsync_server_password=$BASTION_PASSWORD $CHART_FOLDER
            "


run_nginx_server:
  extends:
    - .run_nginx_server
  stage: deploy
  variables:
    MICROSERVICE_DIRECTORY: nginx
    CHART_FOLDER: nginx-server/

run_gobench_client:
  stage: deploy
  extends:
    - .run_gobench_client
  tags:
    - bastion
    - shell
  variables:
    MICROSERVICE_DIRECTORY: gobench
    CHART_FOLDER: gobench-client/
#kubectl create secret docker-registry microservice-docker-registry --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --dry-run=client -o yaml | kubectl apply -f - &&
#         - ls -la
##         - cd $MICROSERVICE_DIRECTORY
##         - helm install nginx-server nginx-server/ &&
