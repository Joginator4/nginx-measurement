stages:
  - build
  - test
  - deploy

variables:
  MASTER_KEY: $MASTER_NODE_PRIVATE_KEY
  MICROSERVICE_DIRECTORY: ""
  MICROSERVICE_NAME: ""
  MICROSERVICE_IMAGE_NAME: $CI_REGISTRY_IMAGE/$MICROSERVICE_NAME
  MICROSERVICE_IMAGE_VERSION: "1.0.$CI_PIPELINE_IID"


build_nginx:
  stage: build
  tags:
    - bastion
    - shell
  variables:
    MICROSERVICE_NAME: nginx
    MICROSERVICE_DIRECTORY: nginx
  only:
    changes:
      - "*/Dockerfile"
  before_script:
    - ls
  script:
    - echo "Logging to CR"; docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd $MICROSERVICE_DIRECTORY
    - docker build -t $MICROSERVICE_IMAGE_NAME/$MICROSERVICE_IMAGE_VERSION .
    - docker push $MICROSERVICE_IMAGE_NAME/$MICROSERVICE_IMAGE_VERSION

build_gobench:
  stage: build
  tags:
    - bastion
    - shell
  variables:
    MICROSERVICE_NAME: gobench
    MICROSERVICE_DIRECTORY: gobench
  only:
    changes:
      - "*/Dockerfile"
  before_script:
    - ls
  script:
    - echo "Logging to CR"; docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd $MICROSERVICE_DIRECTORY
    - docker build -t $MICROSERVICE_IMAGE_NAME/$MICROSERVICE_IMAGE_VERSION .
    - docker push $MICROSERVICE_IMAGE_NAME/$MICROSERVICE_IMAGE_VERSION

run_test:
  stage: test
  tags:
    - bastion
    - shell
  before_script:
#    - cat $MASTER_NODE_PRIVATE_KEY
#    - cat $MASTER_KEY
#    - echo $MASTER_KEY | sed -e "s/-----BEGIN OPENSSH PRIVATE KEY-----/&\n/" -e "s/-----END OPENSSH PRIVATE KEY-----/&\n/" -e "s/\S\{64\}/&\n/g"\ > deploy-key.pem
    - chmod 400 $MASTER_KEY
  script:
         - ssh -tt -o StrictHostKeyChecking=no -i $MASTER_KEY vagrant@$MASTER_IP_ADDRESS "
               docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
               kubectl create secret docker-registry microservice-docker-registry --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --dry-run=client -o yaml | kubectl apply -f -
               ls -la
               cd nginx
               helm install nginx-server nginx-server/
               "
              